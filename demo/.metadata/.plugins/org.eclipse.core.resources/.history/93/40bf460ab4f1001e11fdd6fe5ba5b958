package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;



import com.example.demo.request.EmployeeRequest;
import com.example.demo.request.UpdateEmpRequest;
import com.example.demo.response.EmployeeDto;
import com.example.demo.service.EmployeeServiceImpl;

import jakarta.validation.Valid;
@CrossOrigin(origins = "http://localhost:3000/")
@RestController
@RequestMapping("/employee")
public class EmployeeController {
     
	@Autowired 
	EmployeeServiceImpl empService;
	
	@PostMapping
	public ResponseEntity<?> addEmployee(@RequestBody @Valid EmployeeRequest empReq) {
	       System.out.println("in add employee method");
	       System.out.println(empReq);
	       return new ResponseEntity<>(empService.addEmployee(empReq), HttpStatus.CREATED);
	       
	}
	
	@GetMapping
	public ResponseEntity<List<EmployeeDto>> getAllEmployees() {
		System.out.println("in find all employees");
		empService.findAllEmployees();
		return new ResponseEntity<>(empService.findAllEmployees(),HttpStatus.CREATED);
	}
	
	@GetMapping("/managers")
	ResponseEntity<List<EmployeeDto>> getAllManagers(){
		return new ResponseEntity<>(empService.getAllManagers(),HttpStatus.CREATED);
	}
	
	
	@GetMapping("/{empId}")
	public ResponseEntity<?> getEmployee(@PathVariable String empId){
		System.out.println("employee id is"+empId);
		//call service method for fetching an employee info  
		System.out.println("in employye controller+ getemployee method");
		return ResponseEntity.ok(empService.getEmployee(empId));
	}
	
	@PutMapping("/{empId}")
	public ResponseEntity<EmployeeDto> updateEmployee(@PathVariable String empId,@RequestBody @Valid UpdateEmpRequest empReq){
		System.out.println("in Employee ctrller updateEmployee()");
		System.out.println("employee id is "+empId);
		empService.updateEmployee(empReq);
	}
	
	
	
	
}
